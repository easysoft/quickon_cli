name: go

env:
  # Common versions
  GO_VERSION: '1.20'

permissions:
  contents: read

on:
  push:
    branches:
      - '*'
    paths:
      - '**.go'
      - 'go.mod'
      - '.github/**'
  pull_request:
    branches:
      - "*"
    paths:
      - '**.go'
      - 'go.mod'
      - '.github/**'
    # paths-ignore:
    #   - 'docs/**'
    #   - '*.md'
    #   - '*.yml'

jobs:
  build:
    name: "PreBuild"
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: install gox
        run: |
          echo "install gox"
          go install github.com/mitchellh/gox@latest
      - name: install upx
        run: |
          echo "install upx"
          sudo apt-get update -qq
          sudo apt-get install -y upx
      - name: build qcadmin
        run: |
          export TZ='Asia/Shanghai'
          export PATH=$PATH:$(go env GOPATH)/bin
          make generate
          make build
          # make upx
          ./dist/qcadmin_linux_amd64 version
      - name: "Upload Binary"
        uses: actions/upload-artifact@v3
        with: { name: qcadmin_linux_amd64, path: dist/qcadmin_linux_amd64 }

  test:
    name: "Smoke Test"
    needs: build
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Download Binary"
        uses: actions/download-artifact@v3
        with: { name: qcadmin_linux_amd64, path: dist/artifacts/ }
      - name: test qcadmin
        working-directory: dist/artifacts/
        run: |
          chmod +x qcadmin_linux_amd64
          sudo ./qcadmin_linux_amd64 init -q test --domain q.local --skip-precheck  --debug
