name: go

env:
  # Common versions
  GO_VERSION: '1.18'

permissions:
  contents: read

on:
  push:
    branches:
      - '*'
    paths:
      - '**.go'
      - 'go.mod'
      - '.golangci.yml'
      - '.github/workflows/go.yml'
  pull_request:
    branches:
      - "*"
    paths:
      - '**.go'
      - 'go.mod'
      - '.golangci.yml'
      - '.github/workflows/go.yml'
    # paths-ignore:
    #   - 'docs/**'
    #   - '*.md'
    #   - '*.yml'

jobs:
  check-license:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Cache Go Dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go
          restore-keys: ${{ runner.os }}-go
      - name: install addlicense
        run: |
          echo "install addlicense"
          go install github.com/google/addlicense@latest
      - name: Run Check License
        run: |
          export TZ='Asia/Shanghai'
          export PATH=$PATH:$(go env GOPATH)/bin
          make gencopyright
          modifyCode=$(git status  -s | grep M | wc -l)
          git status  -s
          if [ $modifyCode -eq 0 ] ; then
             echo "Lic check ok"
          else
             echo "Failed git modify files num is $modifyCode. Lic check error,please exec 'make gencopyright' in your code "
             exit -1
          fi
  lint:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Cache Go Dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go
          restore-keys: ${{ runner.os }}-go
      - name: Run Linter
        run: make lint

  build-binaries:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Cache Go Dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go
          restore-keys: ${{ runner.os }}-go
      - name: install gox
        run: |
          echo "install gox"
          go install github.com/mitchellh/gox@latest
      - name: install upx
        run: |
          echo "install upx"
          sudo apt-get update -qq
          sudo apt-get install -y upx
      - name: build qcadmin
        run: |
          export TZ='Asia/Shanghai'
          export PATH=$PATH:$(go env GOPATH)/bin
          make generate
          make build
          # make upx
          ./dist/qcadmin_linux_amd64 version
          sudo ./dist/qcadmin_linux_amd64 init -q test --domain q.local --skip-precheck  --debug
      - name: build docs
        run: |
          make doc
      - name: docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./docs
